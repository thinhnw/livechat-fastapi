services:

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ../data:/data/db
    networks:
      - backend
    env_file:
      - mongo.env

  # mongo2:
  #   image: mongo:latest
  #   container_name: mongo2
  #   ports:
  #     - "27018:27017"
  #   volumes:
  #     - .data/mongo2:/data/db
  #   networks:
  #     - backend
  #   env_file: 
  #     - mongo.env
  #   command: ["mongod", "--replSet", "rs0", "--auth", "--port", "27017"]

  # mongo3:
  #   image: mongo:latest
  #   container_name: mongo3
  #   ports:
  #     - "27019:27017"
  #   volumes:
  #     - .data/mongo3:/data/db
  #   networks:
  #     - backend
  #   env_file:
  #     - mongo.env
  #   command: ["mongod", "--replSet", "rs0", "--auth", "--port", "27017"]

  # mongo-init:
  #   image: mongo:latest
  #   container_name: mongo-init
  #   depends_on:
  #     - mongo1
  #     - mongo2
  #     - mongo3
  #   networks:
  #     - backend
  #   env_file:
  #     - mongo.env
  #   command: >
  #     bash -c "
  #       sleep 10 &&
  #       mongo --host mongo1:27017 -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin
  #       --eval 'rs.initiate({ _id: \"rs0\", members: [ { _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" } ] });'
  #     "

  redis:
    image: redis
    restart: always
    volumes:
      - .data/redis:/data 
    ports:
      - 6379:6379
    networks:
      - backend
    env_file:
      - redis.env
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]

  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - .:/app
    depends_on:
      - mongo
      - redis
    networks:
      - root_traefik
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.livechatfastapi.rule=Host(`livechat.thinhnw.site`)"
      - "traefik.http.routers.livechatfastapi.entrypoints=websecure"
      - "traefik.http.routers.livechatfastapi.tls=true"
      - "traefik.http.routers.livechatfastapi.tls.certresolver=myresolver"
      - "traefik.http.services.livechatfastapi.loadbalancer.server.port=8000"
      - "traefik.docker.network=root_traefik"

networks:
  root_traefik:
    external: true
  backend:
    driver: bridge